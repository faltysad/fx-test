{"version":3,"sources":["store/currency/currency.types.ts","components/Header/Header.tsx","components/ListHead/ListHead.tsx","components/ListItem/ListItem.tsx","components/List/List.tsx","store/currency/currency.selectors.ts","components/SearchBar/SearchBar.tsx","services/CurrencyApiService.ts","constants/currencyCountryMapping.ts","utils/mapCurrencies.ts","hooks/useFetchCurrencies.ts","store/currency/currency.actions.ts","utils/filterCurrencies.ts","hooks/useCurrencyFilterAndHandleQueryParams.ts","hooks/useSearchInputQueryParamHandler.ts","hooks/useLocationSearchTermParser.ts","hooks/useFilterCurrencies.ts","pages/Home.tsx","hooks/useDebounce.ts","store/currency/currency.reducer.ts","store/index.ts","App.tsx","i18n.ts","index.tsx"],"names":["CurrencyActionTypes","Header","t","useTranslation","id","className","ListHead","props","ListItem","currencyItem","formattedCurrency","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","exchangeRate","sell","src","flagFileName","alt","countryCode","width","height","currencyCode","currencyName","ListWrapper","children","List","currencies","isLoading","isFiltering","isError","length","map","currency","index","getOwnState","store","selectIsCurrencyLoading","loading","selectCurrencyError","error","selectCurrencies","data","selectFilteredCurrencies","filteredData","selectSearchTerm","searchTerm","selectIsCurrencyFiltering","filtering","SearchBar","handleInputChange","searchInputDisabled","useState","localInputSearchValue","setLocalInputSearchValue","useSelector","useEffect","htmlFor","autoFocus","type","name","placeholder","disabled","value","onChange","e","currentTarget","axiosInstance","axios","create","baseURL","CurrencyApiService","a","get","CURRENCY_COUNTRY_MAPPING","FJD","MXN","STD","SCR","CDF","BBD","GTQ","CLP","HNL","UGX","ZAR","TND","BSD","SLL","IQD","GMD","CUP","TWD","RSD","DOP","KMF","MYR","FKP","XOF","GEL","UYU","MAD","CVE","TOP","OMR","PGK","KES","SEK","GNF","ARS","QAR","IRR","MRO","CNY","THB","UZS","BDT","LTL","LYD","KWD","PHP","RUB","PYG","ISK","JMD","COP","MKD","USD","DZD","PAB","SGD","ETB","KGS","SOS","VUV","LAK","BND","XAF","LRD","CHF","HRK","ALL","DJF","TZS","VND","AUD","ILS","GYD","KPW","BOB","KHR","MDL","IDR","AMD","BWP","SHP","TRY","LBP","JOD","AED","RWF","EUR","LSL","DKK","CAD","BGN","MMK","MUR","NOK","SYP","GIP","RON","LKR","NGN","CRC","CZK","PKR","XCD","ANG","HTG","BHD","KZT","SZL","SAR","TTD","YER","MVR","AFN","INR","AWG","KRW","NPR","JPY","MNT","AOA","PLN","GBP","SBD","HUF","BIF","MWK","BZD","BAM","EGP","MOP","NAD","NIO","PEN","NZD","WST","TMT","BRL","isValidCurrencyApiResponseItem","item","nameI18N","buy","middle","useFetchCurrencies","dispatch","useDispatch","FETCH_REQUEST","getCurrencies","fx","mappedData","filter","toLowerCase","FETCH_SUCCESS","payload","FETCH_ERROR","filterCurrencies","searchValue","Object","values","join","includes","useCurrencyFilterAndHandleQueryParams","debouncedSearchTerm","filteredCurrencies","history","useHistory","push","search","queryString","stringify","useSearchInputQueryParamHandler","location","useLocation","locationSearchTerm","parse","SEARCH_TERM_CHANGE","useLocationSearchTermParser","FILTER_DATA","useFilterCurrencies","Home","setSearchValue","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","initialState","undefined","rootReducer","combineReducers","state","action","composedEnhancers","composeWithDevTools","applyMiddleware","thunk","createStore","configureStore","App","StrictMode","Suspense","fallback","i18n","use","initReactI18next","init","resources","en","translation","title","listHead","country","searchLabel","noResult","countries","FJ","MX","ST","SC","CD","BB","GT","CL","HN","UG","ZA","TN","BS","SL","IQ","GM","CU","TW","RS","DO","KM","MY","FK","BF","GE","UY","CV","TO","OM","PG","KE","SE","GN","AR","QA","IR","MR","NO","CN","TH","US","UZ","BD","LY","KW","PH","RU","PY","IS","JM","CO","MK","DZ","PA","SG","ET","KG","SO","VU","LA","BN","CF","LR","CH","HR","AL","DJ","NZ","TZ","VN","AU","IL","GY","KP","BO","KH","MD","ID","AM","BW","SH","TR","LB","LT","JO","AE","RW","AD","LS","DK","CA","BG","MA","MM","MU","BV","SY","GI","RO","LK","NG","CR","CZ","PK","AG","CW","HT","BH","KZ","SZ","SA","TT","YE","MV","AF","BT","AW","KR","NP","JP","MN","AO","PL","GB","SB","HU","BI","MW","BZ","BA","EG","MO","NA","NI","PE","CK","WS","TM","BR","lng","interpolation","escapeValue","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d377cbde.chunk.js","sourcesContent":["interface IExchangeRateType {\n    buy: number\n    sell: number\n    middle: number\n}\n\nexport interface ICurrency {\n    currencyCode: string\n    currencyName: string\n    countryCode: string\n    flagFileName: string\n    exchangeRate: IExchangeRateType\n}\n\nexport enum CurrencyActionTypes {\n    FETCH_REQUEST = \"currency/FETCH_REQUEST\",\n    FETCH_SUCCESS = \"currency/FETCH_SUCCESS\",\n    FETCH_ERROR = \"currency/FETCH_ERROR\",\n    FILTER_DATA = \"currency/FILTER_DATA\",\n    SEARCH_TERM_CHANGE = \"currency/SEARCH_TERM_CHANGE\",\n}\n\nexport interface ICurrencyState {\n    readonly loading: boolean\n    readonly filtering: boolean\n    readonly error?: string\n    readonly data: ICurrency[]\n    filteredData: ICurrency[]\n    searchTerm: string | null\n}\n","import { useTranslation } from \"react-i18next\"\n\nconst Header = () => {\n    const { t } = useTranslation()\n\n    return (\n        <div\n            id=\"HEADER\"\n            className=\"flex justify-center items-center shadow-md bg-blue-300 text-blue-900\"\n        >\n            <h1 className=\"text-xl font-bold\">{t(\"title\")}</h1>\n        </div>\n    )\n}\n\nexport default Header\n","import { useTranslation } from \"react-i18next\"\n\ninterface IListHeadProps {}\n\nconst ListHead = (props: IListHeadProps) => {\n    const { t } = useTranslation()\n\n    return (\n        <div className=\"grid grid-cols-table border-0 border-b border-solid items-center py-2 font-bold\">\n            <div className=\"listItemFlagWrapper\">{t(\"listHead.currency\")}</div>\n            <div>{t(\"listHead.country\")}</div>\n            <div>{t(\"listHead.exchangeRate\")}</div>\n        </div>\n    )\n}\n\nexport default ListHead\n","import { useTranslation } from \"react-i18next\"\nimport { ICurrency } from \"../../types/ICurrency\"\n\ninterface IListItemProps {\n    currencyItem: ICurrency\n}\n\nconst ListItem = (props: IListItemProps) => {\n    const { currencyItem } = props\n    const { t } = useTranslation()\n    const formattedCurrency = new Intl.NumberFormat(\"de-DE\", {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n    }).format(currencyItem.exchangeRate.sell)\n\n    return (\n        <div\n            id=\"LIST_ITEM\"\n            className=\"grid grid-cols-table border-0 border-b border-solid items-center\"\n        >\n            <div className=\"grid grid-cols-flagWrapper items-center\">\n                <div className=\"p-8 pl-0 py-2\">\n                    <img\n                        id=\"FLAG_ICON\"\n                        src={`./flags/${currencyItem.flagFileName}`}\n                        alt={`${currencyItem.countryCode} flag`}\n                        width={70}\n                        height={47}\n                    ></img>\n                </div>\n                <div className=\"ml-1\">\n                    {currencyItem.currencyCode} - {currencyItem.currencyName}\n                </div>\n            </div>\n            <div>{t(`countries.${currencyItem.countryCode}`)}</div>\n            <div>{formattedCurrency}</div>\n        </div>\n    )\n}\n\nexport default ListItem\n","import React from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { ICurrency } from \"../../types/ICurrency\"\nimport ListHead from \"../ListHead/ListHead\"\nimport ListItem from \"../ListItem/ListItem\"\n\nexport type ListProps = {\n    currencies: ICurrency[]\n    isLoading: boolean\n    isFiltering: boolean\n    isError: boolean\n}\n\nconst ListWrapper = (props: React.PropsWithChildren<{}>) => {\n    const { children } = props\n\n    return (\n        <div id=\"LIST\" className=\"container mx-auto\">\n            <ListHead />\n            {children}\n        </div>\n    )\n}\n\nconst List = (props: ListProps) => {\n    const { currencies, isLoading, isFiltering, isError } = props\n    const { t } = useTranslation()\n\n    if (isError) {\n        return (\n            <ListWrapper>\n                <h1 id=\"IS_ERROR\">{t(\"isError\")}</h1>\n            </ListWrapper>\n        )\n    }\n\n    if (isLoading || isFiltering) {\n        return (\n            <ListWrapper>\n                <h1 id=\"IS_LOADING\">{t(\"isLoading\")}</h1>\n            </ListWrapper>\n        )\n    }\n\n    if (!currencies.length) {\n        return (\n            <ListWrapper>\n                <h1 id=\"NO_RESULT\">{t(\"noResult\")}</h1>\n            </ListWrapper>\n        )\n    }\n\n    return (\n        <ListWrapper>\n            {currencies.map((currency, index) => (\n                <ListItem\n                    key={`${currency.countryCode}-${index}`}\n                    currencyItem={currency}\n                />\n            ))}\n        </ListWrapper>\n    )\n}\n\nexport default List\n","import { IApplicationState } from \"..\"\n\nconst getOwnState = (store: IApplicationState) => store.currency\n\nexport const selectIsCurrencyLoading = (store: IApplicationState) =>\n    getOwnState(store).loading\nexport const selectCurrencyError = (store: IApplicationState) =>\n    getOwnState(store).error\nexport const selectCurrencies = (store: IApplicationState) => getOwnState(store).data\nexport const selectFilteredCurrencies = (store: IApplicationState) =>\n    getOwnState(store).filteredData\nexport const selectSearchTerm = (store: IApplicationState) =>\n    getOwnState(store).searchTerm\nexport const selectIsCurrencyFiltering = (store: IApplicationState) =>\n    getOwnState(store).filtering\n","import { ChangeEvent, useEffect, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { useSelector } from \"react-redux\"\nimport { selectSearchTerm } from \"../../store/currency/currency.selectors\"\n\ninterface ISearchBarProps {\n    handleInputChange: (e: ChangeEvent<HTMLInputElement>) => void\n    searchInputDisabled: boolean\n}\n\n// This component is not intended for universal use, it handles all the necessary side-effects\n// to ensure synchronization between query params and search input value\nconst SearchBar = (props: ISearchBarProps) => {\n    const { handleInputChange, searchInputDisabled } = props\n    const [localInputSearchValue, setLocalInputSearchValue] = useState<string>(\"\")\n    const { t } = useTranslation()\n\n    const searchTerm = useSelector(selectSearchTerm)\n\n    const handleSearchInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setLocalInputSearchValue(e.currentTarget.value)\n        handleInputChange(e)\n    }\n\n    useEffect(() => {\n        setLocalInputSearchValue(searchTerm || \"\")\n    }, [searchTerm])\n\n    return (\n        <div className=\"bg-blue-100 sticky top-0 flex items-center\">\n            <div className=\"container mx-auto\">\n                <div>\n                    <label id=\"SEARCH_LABEL\" htmlFor=\"SEARCH\" className=\"\">\n                        {t(\"searchLabel\")}\n                    </label>\n                    <input\n                        autoFocus={true}\n                        className=\"px-6 py-3 rounded-md w-full\"\n                        type=\"text\"\n                        id=\"SEARCH\"\n                        name=\"SEARCH\"\n                        placeholder={t(\"search\")}\n                        disabled={searchInputDisabled}\n                        value={localInputSearchValue}\n                        onChange={handleSearchInputChange}\n                    ></input>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SearchBar\n","import axios from \"axios\"\nimport { ICurrencyApiDTO } from \"../types/ICurrencyDTO\"\n\nconst CURRENCY_API_ENDPOINT =\n    \"https://run.mocky.io/v3/c88db14a-3128-4fbd-af74-1371c5bb0343\"\n\nexport const axiosInstance = axios.create({\n    baseURL: CURRENCY_API_ENDPOINT,\n})\n\nclass CurrencyApiService {\n    async getCurrencies() {\n        return axiosInstance.get<ICurrencyApiDTO>(\"/\")\n    }\n}\n\nexport default new CurrencyApiService()\n","export const CURRENCY_COUNTRY_MAPPING: Record<string, string> = {\n    FJD: \"FJ\",\n    MXN: \"MX\",\n    STD: \"ST\",\n    SCR: \"SC\",\n    CDF: \"CD\",\n    BBD: \"BB\",\n    GTQ: \"GT\",\n    CLP: \"CL\",\n    HNL: \"HN\",\n    UGX: \"UG\",\n    ZAR: \"ZA\",\n    TND: \"TN\",\n    BSD: \"BS\",\n    SLL: \"SL\",\n    IQD: \"IQ\",\n    GMD: \"GM\",\n    CUP: \"CU\",\n    TWD: \"TW\",\n    RSD: \"RS\",\n    DOP: \"DO\",\n    KMF: \"KM\",\n    MYR: \"MY\",\n    FKP: \"FK\",\n    XOF: \"BF\",\n    GEL: \"GE\",\n    UYU: \"UY\",\n    MAD: \"MA\",\n    CVE: \"CV\",\n    TOP: \"TO\",\n    OMR: \"OM\",\n    PGK: \"PG\",\n    KES: \"KE\",\n    SEK: \"SE\",\n    GNF: \"GN\",\n    ARS: \"AR\",\n    QAR: \"QA\",\n    IRR: \"IR\",\n    MRO: \"MR\",\n    CNY: \"CN\",\n    THB: \"TH\",\n    UZS: \"UZ\",\n    BDT: \"BD\",\n    LTL: \"LT\",\n    LYD: \"LY\",\n    KWD: \"KW\",\n    PHP: \"PH\",\n    RUB: \"RU\",\n    PYG: \"PY\",\n    ISK: \"IS\",\n    JMD: \"JM\",\n    COP: \"CO\",\n    MKD: \"MK\",\n    USD: \"US\",\n    DZD: \"DZ\",\n    PAB: \"PA\",\n    SGD: \"SG\",\n    ETB: \"ET\",\n    KGS: \"KG\",\n    SOS: \"SO\",\n    VUV: \"VU\",\n    LAK: \"LA\",\n    BND: \"BN\",\n    XAF: \"CF\",\n    LRD: \"LR\",\n    CHF: \"CH\",\n    HRK: \"HR\",\n    ALL: \"AL\",\n    DJF: \"DJ\",\n    TZS: \"TZ\",\n    VND: \"VN\",\n    AUD: \"AU\",\n    ILS: \"IL\",\n    GYD: \"GY\",\n    KPW: \"KP\",\n    BOB: \"BO\",\n    KHR: \"KH\",\n    MDL: \"MD\",\n    IDR: \"ID\",\n    AMD: \"AM\",\n    BWP: \"BW\",\n    SHP: \"SH\",\n    TRY: \"TR\",\n    LBP: \"LB\",\n    JOD: \"JO\",\n    AED: \"AE\",\n    RWF: \"RW\",\n    EUR: \"AD\",\n    LSL: \"LS\",\n    DKK: \"DK\",\n    CAD: \"CA\",\n    BGN: \"BG\",\n    MMK: \"MM\",\n    MUR: \"MU\",\n    NOK: \"NO\",\n    SYP: \"SY\",\n    GIP: \"GI\",\n    RON: \"RO\",\n    LKR: \"LK\",\n    NGN: \"NG\",\n    CRC: \"CR\",\n    CZK: \"CZ\",\n    PKR: \"PK\",\n    XCD: \"AG\",\n    ANG: \"CW\",\n    HTG: \"HT\",\n    BHD: \"BH\",\n    KZT: \"KZ\",\n    SZL: \"SZ\",\n    SAR: \"SA\",\n    TTD: \"TT\",\n    YER: \"YE\",\n    MVR: \"MV\",\n    AFN: \"AF\",\n    INR: \"BT\",\n    AWG: \"AW\",\n    KRW: \"KR\",\n    NPR: \"NP\",\n    JPY: \"JP\",\n    MNT: \"MN\",\n    AOA: \"AO\",\n    PLN: \"PL\",\n    GBP: \"GB\",\n    SBD: \"SB\",\n    HUF: \"HU\",\n    BIF: \"BI\",\n    MWK: \"MW\",\n    BZD: \"BZ\",\n    BAM: \"BA\",\n    EGP: \"EG\",\n    MOP: \"MO\",\n    NAD: \"NA\",\n    NIO: \"NI\",\n    PEN: \"PE\",\n    NZD: \"NZ\",\n    WST: \"WS\",\n    TMT: \"TM\",\n    BRL: \"BR\",\n}\n","import { CURRENCY_COUNTRY_MAPPING } from \"../constants/currencyCountryMapping\"\nimport { ICurrency } from \"../types/ICurrency\"\nimport { ICurrencyDTOValidated, ICurrenyDTO } from \"../types/ICurrencyDTO\"\n\nconst isValidCurrencyApiResponseItem = (item: ICurrenyDTO) => {\n    if (\n        item.currency &&\n        item.nameI18N &&\n        item.exchangeRate &&\n        item.exchangeRate.buy &&\n        item.exchangeRate.middle &&\n        item.exchangeRate.sell &&\n        CURRENCY_COUNTRY_MAPPING[item.currency]\n    ) {\n        return true\n    }\n\n    return false\n}\n\nexport const mapCurrencies = (currencies: ICurrenyDTO[]): ICurrency[] => {\n    const validCurrencies = currencies.filter(\n        isValidCurrencyApiResponseItem\n    ) as ICurrencyDTOValidated[]\n\n    const mappedcurrencies = validCurrencies.map((currency) => {\n        return {\n            currencyCode: currency.currency,\n            currencyName: currency.nameI18N,\n            countryCode: CURRENCY_COUNTRY_MAPPING[currency.currency],\n            flagFileName: `${CURRENCY_COUNTRY_MAPPING[\n                currency.currency\n            ].toLowerCase()}.png`,\n            exchangeRate: currency.exchangeRate,\n        }\n    })\n\n    return mappedcurrencies\n}\n","import { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { fetchRequest } from \"../store/currency/currency.actions\"\nimport {\n    selectCurrencies,\n    selectCurrencyError,\n    selectIsCurrencyLoading,\n} from \"../store/currency/currency.selectors\"\n\nexport default function useFetchCurrencies() {\n    const dispatch = useDispatch()\n    const isLoading = useSelector(selectIsCurrencyLoading)\n    const error = useSelector(selectCurrencyError)\n    const currencies = useSelector(selectCurrencies)\n\n    useEffect(() => {\n        dispatch(fetchRequest())\n    }, [dispatch])\n\n    return { currencies, isLoading, error }\n}\n","import { CurrencyActionTypes } from \"./currency.types\"\nimport { IApplicationState } from \"../index\"\n\nimport { ActionCreator, Action, Dispatch } from \"redux\"\nimport { ThunkAction } from \"redux-thunk\"\nimport CurrencyApiService from \"../../services/CurrencyApiService\"\nimport { mapCurrencies } from \"../../utils/mapCurrencies\"\n\nexport type AppThunk = ActionCreator<\n    ThunkAction<void, IApplicationState, null, Action<string>>\n>\n\nexport const fetchRequest: AppThunk = () => {\n    return async (dispatch: Dispatch): Promise<Action> => {\n        try {\n            dispatch({\n                type: CurrencyActionTypes.FETCH_REQUEST,\n            })\n\n            const { data } = await CurrencyApiService.getCurrencies()\n            const mappedData = mapCurrencies(data.fx)\n\n            return dispatch({\n                type: CurrencyActionTypes.FETCH_SUCCESS,\n                payload: mappedData,\n            })\n        } catch (error) {\n            return dispatch({\n                type: CurrencyActionTypes.FETCH_ERROR,\n                payload: error,\n            })\n        }\n    }\n}\n","import { ICurrency } from \"../types/ICurrency\"\n\nexport const filterCurrencies = (currencies: ICurrency[], searchValue: string) => {\n    return currencies.filter((currency) =>\n        Object.values(currency)\n            .join(\" \")\n            .toLowerCase()\n            .includes(searchValue.toLowerCase())\n    )\n}\n","import { useSelector } from \"react-redux\"\nimport {\n    selectCurrencyError,\n    selectFilteredCurrencies,\n    selectIsCurrencyFiltering,\n    selectIsCurrencyLoading,\n} from \"../store/currency/currency.selectors\"\nimport useFetchCurrencies from \"./useFetchCurrencies\"\nimport { useFilterCurrencies } from \"./useFilterCurrencies\"\nimport { useLocationSearchTermParser } from \"./useLocationSearchTermParser\"\nimport { useSearchInputQueryParamHandler } from \"./useSearchInputQueryParamHandler\"\n\nfunction useCurrencyFilterAndHandleQueryParams(debouncedSearchTerm: string) {\n    const filteredCurrencies = useSelector(selectFilteredCurrencies)\n    const isLoading = useSelector(selectIsCurrencyLoading)\n    const error = useSelector(selectCurrencyError)\n    const isFiltering = useSelector(selectIsCurrencyFiltering)\n\n    // The `searchTerm query param` serves as SINGLE SOURCE OF TRUTH for holding the value of searchTerm\n\n    // Perform initial fetch of currencies from API (filtering is then performed on local copy of those data  in redux –`filteredData`)\n    useFetchCurrencies()\n\n    // Maintains synchronization between search input and query parameters (searchTerm query param)\n    useSearchInputQueryParamHandler(debouncedSearchTerm)\n\n    // Keeps query paramns & redux store in sync. Query params serve as single source of truth for controlling the searchTerm value\n    // --> everytime searchTerm query param is changed, redux action is dispatched to keep the searchTerm value in sync and\n    // usable across the application\n    useLocationSearchTermParser()\n\n    // Everytime searchTerm value is changed (performed by the dispatched action mentioned above), local copy of filtered currency data\n    // is filtered inside redux, so it can be displayed inside the application's components.\n    // We keep the initially loaded currency data untouched, so we can revert the filtered data to original state at any time.\n    useFilterCurrencies()\n\n    return {\n        filteredCurrencies,\n        isLoading,\n        error,\n        isFiltering,\n    }\n}\n\nexport default useCurrencyFilterAndHandleQueryParams\n","import { useEffect } from \"react\"\nimport { useHistory } from \"react-router\"\nimport queryString from \"query-string\"\n\nexport function useSearchInputQueryParamHandler(debouncedSearchTerm: string) {\n    const history = useHistory()\n\n    useEffect(() => {\n        if (debouncedSearchTerm === \"\") {\n            history.push({})\n        } else if (debouncedSearchTerm) {\n            history.push({\n                search: queryString.stringify({ searchTerm: debouncedSearchTerm }),\n            })\n        }\n    }, [debouncedSearchTerm, history])\n}\n","import { useEffect } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { useLocation } from \"react-router\"\nimport queryString from \"query-string\"\nimport { CurrencyActionTypes } from \"../store/currency/currency.types\"\n\nexport function useLocationSearchTermParser() {\n    const location = useLocation()\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const locationSearchTerm = queryString.parse(location.search)?.searchTerm\n\n        dispatch({\n            type: CurrencyActionTypes.SEARCH_TERM_CHANGE,\n            payload: locationSearchTerm || null,\n        })\n    }, [location.search, dispatch])\n}\n","import { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport {\n    selectCurrencies,\n    selectSearchTerm,\n} from \"../store/currency/currency.selectors\"\nimport { CurrencyActionTypes } from \"../store/currency/currency.types\"\nimport { filterCurrencies } from \"../utils/filterCurrencies\"\n\nexport function useFilterCurrencies() {\n    const dispatch = useDispatch()\n    const currencies = useSelector(selectCurrencies)\n    const searchTerm = useSelector(selectSearchTerm)\n\n    useEffect(() => {\n        if (currencies.length) {\n            dispatch({\n                type: CurrencyActionTypes.FILTER_DATA,\n                payload:\n                    searchTerm === null\n                        ? currencies\n                        : filterCurrencies(currencies, searchTerm),\n            })\n        }\n    }, [searchTerm, currencies, dispatch])\n}\n","import { ChangeEvent, useState } from \"react\"\nimport Header from \"../components/Header/Header\"\nimport List from \"../components/List/List\"\nimport SearchBar from \"../components/SearchBar/SearchBar\"\nimport useCurrencyFilterAndHandleQueryParams from \"../hooks/useCurrencyFilterAndHandleQueryParams\"\nimport useDebounce from \"../hooks/useDebounce\"\n\nfunction Home() {\n    const [searchValue, setSearchValue] = useState<string | null>(null)\n    const debouncedSearchTerm = useDebounce(searchValue, 500)\n    const { filteredCurrencies, isLoading, error, isFiltering } =\n        useCurrencyFilterAndHandleQueryParams(debouncedSearchTerm)\n\n    const handleSearchInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setSearchValue(e.currentTarget.value)\n    }\n\n    return (\n        <div className=\"grid grid-rows-table\">\n            <Header />\n            <SearchBar\n                handleInputChange={handleSearchInputChange}\n                searchInputDisabled={isLoading}\n            />\n            <List\n                currencies={filteredCurrencies}\n                isLoading={isLoading}\n                isFiltering={isFiltering}\n                isError={!!error}\n            />\n        </div>\n    )\n}\n\nexport default Home\n","import { useEffect, useState } from \"react\"\n\nexport default function useDebounce(value: any, delay: number) {\n    // State and setters for debounced value\n    const [debouncedValue, setDebouncedValue] = useState(value)\n\n    useEffect(\n        () => {\n            // Set debouncedValue to value (passed in) after the specified delay\n            const handler = setTimeout(() => {\n                setDebouncedValue(value)\n            }, delay)\n\n            // Return a cleanup function that will be called every time ...\n            // ... useEffect is re-called. useEffect will only be re-called ...\n            // ... if value changes (see the inputs array below).\n            // This is how we prevent debouncedValue from changing if value is ...\n            // ... changed within the delay period. Timeout gets cleared and restarted.\n            // To put it in context, if the user is typing within our app's ...\n            // ... search box, we don't want the debouncedValue to update until ...\n            // ... they've stopped typing for more than 500ms.\n            return () => {\n                clearTimeout(handler)\n            }\n        },\n        // Only re-call effect if value changes\n        // You could also add the \"delay\" var to inputs array if you ...\n        // ... need to be able to change that dynamically.\n        [value, delay]\n    )\n\n    return debouncedValue\n}\n","import { Reducer } from \"redux\"\nimport { CurrencyActionTypes, ICurrencyState } from \"./currency.types\"\n\nexport const initialState: ICurrencyState = {\n    data: [],\n    filteredData: [],\n    error: undefined,\n    loading: true,\n    filtering: false,\n    searchTerm: null,\n}\n\nconst reducer: Reducer<ICurrencyState> = (state = initialState, action) => {\n    switch (action.type) {\n        case CurrencyActionTypes.FETCH_REQUEST: {\n            return { ...state, loading: true }\n        }\n        case CurrencyActionTypes.FETCH_SUCCESS: {\n            return {\n                ...state,\n                loading: false,\n                data: action.payload,\n                filteredData: action.payload,\n            }\n        }\n        case CurrencyActionTypes.FETCH_ERROR: {\n            return { ...state, loading: false, error: action.payload }\n        }\n\n        case CurrencyActionTypes.SEARCH_TERM_CHANGE: {\n            return { ...state, filtering: true, searchTerm: action.payload }\n        }\n\n        case CurrencyActionTypes.FILTER_DATA: {\n            return { ...state, filtering: false, filteredData: action.payload }\n        }\n\n        default: {\n            return state\n        }\n    }\n}\n\nexport { reducer as currencyReducer }\n","import { applyMiddleware, combineReducers, createStore, Store } from \"redux\"\nimport { ICurrencyState } from \"./currency/currency.types\"\nimport thunk from \"redux-thunk\"\nimport { composeWithDevTools } from \"redux-devtools-extension\"\n\n// reducers\nimport { currencyReducer } from \"./currency/currency.reducer\"\n\nexport interface IApplicationState {\n    currency: ICurrencyState\n}\n\nexport const rootReducer = combineReducers({\n    currency: currencyReducer,\n})\n\nconst composedEnhancers = composeWithDevTools(applyMiddleware(thunk))\n\nconst configureStore = (initialState: IApplicationState): Store<IApplicationState> =>\n    createStore(rootReducer, initialState, composedEnhancers)\n\nexport default configureStore\n","import React from \"react\"\nimport { Provider } from \"react-redux\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport Home from \"./pages/Home\"\nimport configureStore from \"./store\"\n\n// @ts-ignore\nconst store = configureStore({})\n\nfunction App() {\n    return (\n        <React.StrictMode>\n            <React.Suspense fallback=\"Loading..\">\n                <Provider store={store}>\n                    <Router>\n                        <Home />\n                    </Router>\n                </Provider>\n            </React.Suspense>\n        </React.StrictMode>\n    )\n}\n\nexport default App\n","import i18n from \"i18next\"\nimport { initReactI18next } from \"react-i18next\"\n\n// Storing resources here so that we don't have to use `i18next-http-backend`\n// and handle async management of locales. However the config object is prepared\n// for possibility of extension & extraction of locales to .json files if required\nconst resources = {\n    en: {\n        translation: {\n            title: \"George FX test\",\n            listHead: {\n                currency: \"Currency\",\n                country: \"Country\",\n                exchangeRate: \"Exchange Rate\",\n            },\n            search: \"Lookup exchange rates...\",\n            searchLabel: \"Fulltext Search\",\n            isLoading: \"Loading...\",\n            isError: \"Error. Try again.\",\n            noResult: \"No results found\",\n            countries: {\n                FJ: \"Fiji\",\n                MX: \"Mexico\",\n                ST: \"Sao Tome and Principe\",\n                SC: \"Seychelles\",\n                CD: \"Democratic Republic of the Congo\",\n                BB: \"Barbados\",\n                GT: \"Guatemala\",\n                CL: \"Chile\",\n                HN: \"Honduras\",\n                UG: \"Uganda\",\n                ZA: \"South Africa\",\n                TN: \"Tunisia\",\n                BS: \"Bahamas\",\n                SL: \"Sierra Leone\",\n                IQ: \"Iraq\",\n                GM: \"Gambia\",\n                CU: \"Cuba\",\n                TW: \"Taiwan, Province of China\",\n                RS: \"Serbia\",\n                DO: \"Dominican Republic\",\n                KM: \"Comoros\",\n                MY: \"Malaysia\",\n                FK: \"Falkland Islands\",\n                BF: \"Burkina Faso\",\n                GE: \"Georgia\",\n                UY: \"Uruguay\",\n                CV: \"Cabo Verde\",\n                TO: \"Tonga\",\n                OM: \"Oman\",\n                PG: \"Papua New Guinea\",\n                KE: \"Kenya\",\n                SE: \"Sweden\",\n                GN: \"Guinea\",\n                AR: \"Argentina\",\n                QA: \"Qatar\",\n                IR: \"Iran\",\n                MR: \"Mauritania\",\n                NO: \"Norway\",\n                CN: \"China\",\n                TH: \"Thailand\",\n                US: \"United States\",\n                UZ: \"Uzbekistan\",\n                BD: \"Bangladesh\",\n                LY: \"Libya\",\n                KW: \"Kuwait\",\n                PH: \"Philippines\",\n                RU: \"Russian Federation\",\n                PY: \"Paraguay\",\n                IS: \"Iceland\",\n                JM: \"Jamaica\",\n                CO: \"Colombia\",\n                MK: \"North Macedonia\",\n                DZ: \"Algeria\",\n                PA: \"Panama\",\n                SG: \"Singapore\",\n                ET: \"Ethiopia\",\n                KG: \"Kyrgyzstan\",\n                SO: \"Somalia\",\n                VU: \"Vanuatu\",\n                LA: \"Lao People's Democratic Republic\",\n                BN: \"Brunei Darussalam\",\n                CF: \"Central African Republic\",\n                LR: \"Liberia\",\n                CH: \"Switzerland\",\n                HR: \"Croatia\",\n                AL: \"Albania\",\n                DJ: \"Djibouti\",\n                NZ: \"New Zealand\",\n                TZ: \"Tanzania, United Republic of\",\n                VN: \"Viet Nam\",\n                AU: \"Australia\",\n                IL: \"Israel\",\n                GY: \"Guyana\",\n                KP: \"Korea\",\n                BO: \"Bolivia\",\n                KH: \"Cambodia\",\n                MD: \"Moldova, Republic of\",\n                ID: \"Indonesia\",\n                AM: \"Armenia\",\n                BW: \"Botswana\",\n                SH: \"Saint Helena\",\n                TR: \"Turkey\",\n                LB: \"Lebanon\",\n                LT: \"Lithuania\",\n                JO: \"Jordan\",\n                AE: \"United Arab Emirates\",\n                RW: \"Rwanda\",\n                AD: \"Andorra\",\n                LS: \"Lesotho\",\n                DK: \"Denmark\",\n                CA: \"Canada\",\n                BG: \"Bulgaria\",\n                MA: \"Morocco\",\n                MM: \"Myanmar\",\n                MU: \"Mauritius\",\n                BV: \"Bouvet Island\",\n                SY: \"Syrian Arab Republic\",\n                GI: \"Gibraltar\",\n                RO: \"Romania\",\n                LK: \"Sri Lanka\",\n                NG: \"Nigeria\",\n                CR: \"Costa Rica\",\n                CZ: \"Czechia\",\n                PK: \"Pakistan\",\n                AG: \"Antigua and Barbuda\",\n                CW: \"Curaçao\",\n                HT: \"Haiti\",\n                BH: \"Bahrain\",\n                KZ: \"Kazakhstan\",\n                SZ: \"Eswatini\",\n                SA: \"Saudi Arabia\",\n                TT: \"Trinidad and Tobago\",\n                YE: \"Yemen\",\n                MV: \"Maldives\",\n                AF: \"Afghanistan\",\n                BT: \"Bhutan\",\n                AW: \"Aruba\",\n                KR: \"Korea, Republic of\",\n                NP: \"Nepal\",\n                JP: \"Japan\",\n                MN: \"Mongolia\",\n                AO: \"Angola\",\n                PL: \"Poland\",\n                GB: \"United Kingdom\",\n                SB: \"Solomon Islands\",\n                HU: \"Hungary\",\n                BI: \"Burundi\",\n                MW: \"Malawi\",\n                BZ: \"Belize\",\n                BA: \"Bosnia and Herzegovina\",\n                EG: \"Egypt\",\n                MO: \"Macao\",\n                NA: \"Namibia\",\n                NI: \"Nicaragua\",\n                PE: \"Peru\",\n                CK: \"Cook Islands\",\n                WS: \"Samoa\",\n                TM: \"Turkmenistan\",\n                BR: \"Brazil\",\n            },\n        },\n    },\n}\n\ni18n.use(initReactI18next).init({\n    resources,\n    lng: \"en\",\n\n    interpolation: {\n        escapeValue: false, // not needed for react as it escapes by default\n    },\n})\n\nexport default i18n\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport \"./i18n\"\nimport \"./index.css\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}